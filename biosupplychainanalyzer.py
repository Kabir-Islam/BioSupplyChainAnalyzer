# -*- coding: utf-8 -*-
"""BioSupplyChainAnalyzer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X1TSohupCI7J08RBEM_yCfbEXHYGw9mc
"""

# -*- coding: utf-8 -*-
"""Task 2.ipynb

Original file is located at
    https://colab.research.google.com/drive/1b4F3kI_4XQrqZNlqJP4gGlpnwfcEKBxd
"""

#  task -2 (extra-2)

import pandas as pd
import matplotlib.pyplot as plt

# Introduction:
# This script performs a supply chain analysis for biotechnology products.
# It includes data preprocessing, cost and time calculations, analysis, and visualizations.

# Load the data from the CSV file
data = pd.read_csv("SCM_1.csv")

# 1. Data Import and Preprocessing
# Task: Import the supply chain data and handle missing or inconsistent entries.
def preprocess_data(data):
    """
    Preprocesses the supply chain data.

    Parameters:
        data (DataFrame): The raw supply chain data.

    Returns:
        DataFrame: The cleaned supply chain data with missing values filled.
    """
    # Check for missing values and handle them if necessary
    data.fillna(0, inplace=True)  # Filling missing values with 0
    return data

# 2. Cost and Time Calculation
# Task: Calculate total production and transportation costs and total transportation time for each product type.
def calculate_costs(data):
    """
    Calculates the total production cost, transportation cost, and transportation time for each product type.

    Parameters:
        data (DataFrame): The preprocessed supply chain data.

    Returns:
        DataFrame: Aggregated costs and time for each product type.
    """
    # Calculate total production cost
    data['Total_Production_Cost'] = data['Production_Time (hrs)'] * data['Quantity']

    # Calculate total transportation cost and time
    total_costs = data.groupby('Product_Type').agg(
        Total_Production_Cost=('Total_Production_Cost', 'sum'),
        Total_Transportation_Cost=('Transportation_Cost ($)', 'sum'),
        Total_Transportation_Time=('Transportation_Cost ($)', 'sum')  # Assuming time is related to cost here
    ).reset_index()

    return total_costs

# 3. Analysis
# Task: Identify products with the highest production time and transportation cost and calculate average transportation cost.
def analyze_data(data):
    """
    Performs analysis on the supply chain data to identify key metrics.

    Parameters:
        data (DataFrame): The preprocessed supply chain data.

    Returns:
        Tuple: The product with the highest production time, the highest transportation cost, and the average transportation cost.
    """
    # Identify the product with the highest production time
    highest_production_time = data.loc[data['Production_Time (hrs)'].idxmax()]
    # Identify the product with the highest transportation cost
    highest_transportation_cost = data.loc[data['Transportation_Cost ($)'].idxmax()]

    # Calculate the average transportation cost
    average_transportation_cost = data['Transportation_Cost ($)'].mean()

    return highest_production_time, highest_transportation_cost, average_transportation_cost

# 4. Visualization
# Task: Create bar and pie charts to visualize production and transportation costs.
def visualize_data(total_costs):
    """
    Visualizes the production and transportation costs using bar and pie charts.

    Parameters:
        total_costs (DataFrame): The aggregated costs and time for each product type.
    """
    # Bar chart for production cost and transportation cost
    total_costs.set_index('Product_Type')[['Total_Production_Cost', 'Total_Transportation_Cost']].plot(kind='bar')
    plt.title('Production Cost and Transportation Cost by Product Type')
    plt.ylabel('Cost ($)')
    plt.xlabel('Product Type')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()
    # Summary: This bar chart compares the total production and transportation costs across product types.

    # Pie chart for total costs distribution
    total_costs.set_index('Product_Type')['Total_Production_Cost'].plot(kind='pie', autopct='%1.1f%%')
    plt.title('Proportion of Total Production Costs by Product Type')
    plt.ylabel('')
    plt.show()
    # Summary: This pie chart displays the proportion of total production costs contributed by each product type.

# Execute all tasks in sequence
# Step 1: Preprocess the data
preprocessed_data = preprocess_data(data)

# Step 2: Calculate costs and time
total_costs = calculate_costs(preprocessed_data)

# Step 3: Perform analysis
highest_production_time, highest_transportation_cost, average_transportation_cost = analyze_data(preprocessed_data)

# Print analysis results
print(f"Product with Highest Production Time: {highest_production_time['Product_Type']} ({highest_production_time['Production_Time (hrs)']} hrs)")
print(f"Product with Highest Transportation Cost: {highest_transportation_cost['Product_Type']} (${highest_transportation_cost['Transportation_Cost ($)']})")
print(f"Average Transportation Cost: ${average_transportation_cost:.2f}")

# Step 4: Visualize the data
visualize_data(total_costs)